// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package lib

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 11, 12, 22, 56, 57, 616064843, time.UTC),
		},
		"/std.js": &vfsgen۰CompressedFileInfo{
			name:             "std.js",
			modTime:          time.Date(2018, 11, 12, 23, 53, 57, 917092472, time.UTC),
			uncompressedSize: 13589,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\x5d\x6f\xe3\x36\xb3\xbe\x3f\xbf\x42\xc9\x45\x20\x56\xb2\x20\x29\x8e\x37\x6b\x99\x5e\xec\xb6\x49\x9b\x62\x9b\x14\x9b\xb4\x45\x1b\x04\x86\x62\xd3\x31\x4f\xb5\x92\x4b\xd2\x9b\x93\xda\x3a\xbf\xfd\x05\x3f\x24\x51\x12\x25\x3b\xc5\xbe\x40\x6f\x36\x2b\x7e\x3c\x33\x1c\xce\x0c\x67\x86\xf4\x97\x98\x58\x0c\xb2\xdd\x6e\x9b\x47\xcc\xbb\xcc\xc8\xe7\x98\xc1\xed\xfb\x0d\xcb\xc6\xbe\xfb\xe3\xed\xcd\xf5\x38\x70\x7f\x7f\xff\xd3\xc7\x71\xc8\xfb\x7f\x23\x98\xa1\xf7\xe4\x89\xc2\xe5\x26\x9d\x33\x9c\xa5\x36\xd8\xb2\x15\xa6\xde\xe3\x23\x4c\x37\x49\x12\xa9\x8f\xd9\x3a\xa3\xd0\xaf\x4d\xf1\xd6\x24\x63\x19\x7b\x59\x23\x6f\x36\xc3\x29\x66\x15\x06\x73\x51\x09\x23\x66\xb2\x02\x07\xa2\x88\x20\xb6\x21\xa9\xc5\x1b\xea\x78\x4f\x88\x7d\xca\x32\xf6\x9e\x1a\xb8\x42\x2e\x06\x5b\x39\xd3\xc6\xbb\x5d\x8a\x9e\x2d\x6d\x2a\x50\x1c\xd8\xc8\x23\x28\x5e\x5c\xa5\xec\x34\xb4\x91\xb7\xce\x28\x96\x6b\x02\x8e\xfe\xe5\x22\xd0\xb5\x92\x75\xcc\x56\xda\x3a\xc0\x96\xcb\x13\x41\xc5\xbd\x37\x9b\x65\xcb\x25\x45\xcc\xd6\x16\xe7\x0e\x41\xb1\x26\xf4\xae\x1a\x48\x19\xc1\xe9\x93\x3e\xd0\x41\x2e\x03\x63\x2e\xd5\x2e\xea\x5f\xe2\x64\x83\x5e\x4b\x7e\xf4\xd5\xc8\xf3\x7f\x74\x45\x38\x80\xf8\xb9\x81\xb8\xda\x82\xf3\x3a\x71\x30\x2e\xd4\xd1\xe3\xda\xd8\xc5\x03\x4e\x17\x28\x65\x4d\x2e\x58\x3f\x17\x81\x5f\xb2\xc1\xfa\xd9\x60\x60\xdc\xd0\x62\xca\x62\xc2\x0c\x1a\xc7\xc0\x96\xc9\xce\x9b\xc7\xff\x45\x73\x66\x0f\x1b\x4a\x13\x2f\x16\x3f\xd7\xb5\x45\x68\x3d\x6f\xbf\xc4\x28\x59\xdc\x48\x3e\x7d\x17\xb9\x7e\x7b\xea\xaf\x8d\xad\x36\xce\x0d\xcc\x73\xef\x6a\xfb\x24\x4c\x03\x95\x53\xc5\x92\x43\x17\xbb\x35\x71\xb7\x41\xae\x1a\x82\x6e\x70\x20\x60\x4e\x0d\xf4\x51\xba\x30\x4b\x4b\x69\x0b\x1f\xa0\x24\x56\xe9\x46\x1e\xc9\x5e\x24\xfc\x12\xf2\xc4\xe4\xed\xf5\xcd\xf5\xc5\xd8\x77\x4b\xb8\x71\xc0\xfb\x7e\x42\x94\xc6\x4f\xe8\x50\x8f\x54\x4e\xf8\x2a\xfe\xa8\x42\x2b\xbd\x51\x8b\x1f\xd6\xf6\x45\xe5\xb4\xd2\x13\x31\xcd\x13\xb1\x9a\x27\xd2\xbf\x5c\x06\xcc\x2b\x88\xc9\x13\xbd\x33\x98\xe3\x1e\x43\x18\x76\xd8\xc1\x2f\xd8\x60\x08\x72\x1b\x3c\xbe\x0b\xdd\x4c\x7c\x1d\x6f\xb4\x49\xa5\xe0\x1a\x1e\x41\x3a\xa3\x8a\xb4\x30\xb7\xb6\xbc\x9b\x96\x18\xd6\x84\x16\x2f\x16\xef\x5b\xd2\x12\x7b\xd4\xd0\x66\xdf\xc5\xae\xb6\x66\x13\xc8\xa1\x06\x59\x4d\x44\xe9\xc2\xc4\xf0\x7e\x63\xc0\x70\x9b\x47\xd8\xbb\xbd\xfa\xe3\xe2\xe6\x72\x76\xfb\xc3\xcd\xa7\x3b\x18\x56\x0d\x57\xd7\x77\x70\x18\x61\xef\xf2\xea\xe3\xc5\xec\xea\xbb\x8b\xeb\xbb\xab\xcb\xab\x8b\x4f\xb3\x8f\x17\xd7\xdf\xdf\xfd\x20\xba\x2e\xd2\x79\xb6\xc0\xe9\x13\xdc\xfe\x72\x77\x79\x3e\xfb\xf0\xfb\xdd\xc5\xed\x38\x70\x7f\xb9\xbb\x0c\x46\xb3\xdb\xbb\x4f\x57\xd7\xdf\xf3\x53\x1e\x7b\x98\x6b\x21\xe4\x7a\x2a\xf4\xf1\x3d\x21\xf1\x8b\x1d\x82\x08\x7b\xcb\x24\x8b\x8b\xbe\x4b\xf9\x7f\xd9\xab\x26\x79\x8f\x9b\xe5\x12\x91\x72\xe8\x68\x58\x0d\x1d\x0d\xbb\x86\x62\xfa\x11\x33\x96\xa0\x8b\x74\x81\xe3\x54\xcc\xe0\x0a\x18\x8c\xe4\x84\xe2\xfb\x5c\x7e\xde\x07\xae\xff\x00\x8a\xe9\xf7\xfe\x03\x84\x30\x88\xb0\xf7\x31\x4b\x9f\x4c\x26\x9c\x64\xcf\x90\xed\x7c\x69\xc1\x2b\xfc\xb4\x82\x68\xe7\xe7\x6a\x82\x37\x27\x28\x66\x4d\xc7\x5a\xd8\x04\x84\xfe\xc9\x09\x82\xd0\x7f\xa7\x46\xff\x71\xf1\xe9\x66\xcc\xf9\x91\xdf\x62\x74\x09\xa5\x1d\x8c\x99\x5a\xb1\x6e\x8e\xca\x03\x14\x3c\x4d\xa7\x53\x1f\x38\x25\x53\xdf\x0c\xc3\xb7\xc3\xb7\xa3\x37\xe1\xdb\x91\x01\x10\xfd\xb5\x89\x93\xba\x6d\x69\x6e\x48\x2c\x11\x32\xfe\xe7\xe4\xa4\x5a\x26\x64\xe2\x6f\x09\xc7\x99\x87\x1a\xf3\xbe\xeb\x73\xe9\x7f\xd8\xe0\x64\x81\x48\x0d\x1c\x2f\xed\xa3\x52\x2b\x03\x3f\x1c\xe6\x28\xa1\xa8\xd0\xd2\xbc\x70\x86\xd8\xfb\xf0\xc2\xd0\x07\xb1\x13\x5e\x9c\x24\xd9\x3c\x66\xc8\x46\x40\xca\x9a\xae\xe3\x39\x82\x48\x7e\x7c\xc6\x69\x9c\xe0\xa7\x14\x06\xf2\xfb\x0b\x8b\x1f\x13\xa4\x79\x68\xd9\x30\xc3\xe9\x6c\x43\x11\x54\xdb\x85\xe9\x35\xa2\x0c\x2d\xe0\x32\x4e\xa8\x42\xca\x84\x7d\xcc\x84\x81\x17\xe3\xe4\x64\x0a\xef\x1f\xd4\x37\x9a\xb3\x8c\xcc\xd2\xcd\xe7\x19\x4a\xd0\x67\x5a\x8c\x5b\x66\x64\x8e\x66\x0b\xb4\x8c\x37\x09\xa3\x12\x35\xaf\x64\xa0\x49\x5c\x8c\xfc\xae\x1c\xa8\xfb\x16\x03\x10\x33\x83\x2c\x62\x16\x4b\xe9\xb4\x15\xc1\x52\x42\x34\xcf\x8c\x69\xa5\xf1\xdd\x73\xbd\xc7\x17\x86\xa8\x0d\x3c\xba\x79\x8c\x85\x71\x14\x1d\xfa\x91\xd1\x6a\x92\x5a\xa7\x9c\x31\x00\x5d\x1c\x08\xe2\xfb\xd8\x2f\x59\x90\xf6\xe8\xd1\x04\xcf\xd1\x57\x64\x63\x4d\xd0\xba\x61\x9d\x78\x69\xb3\x69\x4d\xa9\xd4\xa6\x94\x3a\xc6\x72\xae\xa9\x04\xfe\x7f\xc9\xc8\x3c\x5e\xc7\x73\xcc\x5e\x6c\x30\xa8\x74\xd3\x41\xc0\x09\x4e\xd8\x20\x88\x9e\x57\x38\x51\x5c\x8b\x9e\x09\x71\x98\x83\xa4\x01\x50\xd8\x06\x89\x34\x0b\x50\x2c\x3f\x91\xec\xb9\xb2\x86\x82\xb0\x6e\x0a\x8e\x01\x68\x40\xa5\x31\xad\xe3\x85\x4d\xba\x44\x10\x2f\x6a\x0a\xb8\xcc\x88\x2d\x2d\xd1\x8f\xd0\x84\x45\xc8\x71\xca\x68\xc5\x7b\xe6\xc1\x91\x38\xbe\x06\xda\x4a\xf9\x21\x64\x06\x2f\xc7\xb7\x75\xbc\x86\x56\x61\x0d\x60\x20\xc2\x90\x3e\xb4\x60\xd4\x0b\x17\x8c\x6a\x78\xe1\x5e\xbc\xd3\xb0\x17\x8f\xc7\x4c\x1a\xde\x70\x2f\x9e\xee\x99\x0d\x78\xa3\x61\x0d\xef\xbc\x1f\x4f\x1d\x84\xdd\x88\x6a\xc0\x6b\x78\x6c\x9d\x1f\x46\xcc\x83\xf9\x14\xf1\xbb\x69\x8f\xb9\x79\xd9\x01\x3f\x08\xc4\xa7\xb6\xdf\xbd\x48\xa6\xfd\x15\x50\x61\x0b\x8a\xef\x75\x2f\x96\x49\x72\x02\x6b\xd8\xc2\xe2\x32\xec\xc5\x32\x49\x4c\x60\x9d\xb7\xb0\xb8\xec\xba\xb1\x3a\xf7\xd4\xc4\x59\xb9\xbf\x7b\xf0\x0e\xe5\xae\xdc\xdb\x1e\xbc\x22\x4a\xad\xf9\x46\x1e\xc4\x72\xef\xd8\x3e\xa1\x76\x3b\x74\x04\xb1\xa2\xa9\xb4\xa1\x3a\xa8\x93\x8c\x71\x62\x7b\xa9\xd5\xb6\xfd\x95\xe4\x82\xd1\xeb\xe9\xd5\x36\xe0\x95\xf4\x4e\xc3\xd7\xd3\xab\x6d\x50\x3f\xbd\xa3\x22\x28\xb3\x31\xa8\xd1\x1d\x0d\x5f\x49\xb7\xad\x6a\xaf\x59\x69\xa1\x7b\xff\x80\xe6\x2b\x56\x6b\xa0\xf9\xea\x75\xca\x94\xe8\x1f\x92\x54\xf9\xd4\xeb\x28\xde\x32\xb2\x99\x1b\x29\x6a\xe0\xa9\x08\x30\x0f\x44\x4e\x55\x34\x5a\x0f\x95\xd9\x11\xac\x87\x32\x5b\xb6\x22\xd9\xb3\xc5\x63\xed\x0b\x42\x32\x62\x1f\x5f\x26\x31\x93\x91\x01\x1d\x5b\x54\xf0\x65\x7d\xde\x50\x66\x3d\x22\x8b\x22\x82\xe3\x04\xff\x8d\x16\x16\x4e\x13\x9c\x22\xef\xb8\x93\x7e\xc6\xae\x1b\x2c\x54\x12\x2c\x82\xe5\x7d\xe4\x65\x00\x5d\x92\x8d\x39\x8c\x64\x26\xcd\x04\x43\x72\x95\xdd\x5c\x70\x19\xb5\x3d\x99\x8c\xc1\xef\xd9\x43\x5d\x18\x66\x88\xac\xa1\x0c\xad\xb0\xd2\x18\xb0\xe9\x58\xf5\x78\xcb\x98\x4c\x6b\xf1\x1a\xdf\xf3\x93\xd3\x30\x0c\xc2\xf0\x6c\xf8\x26\xdc\x27\xa2\x79\x9c\x72\x59\x70\x1a\x96\x0c\x6c\xad\x47\xf4\x92\xa5\x0b\x2b\xb4\x9e\xf0\x53\x2c\x82\x5e\x2e\x20\x19\x67\xa2\xc9\x24\x88\x64\xac\x68\x4e\x89\x08\x88\xa8\x47\x11\xfb\xb9\x08\x7e\xc9\x00\xf1\xa6\x32\x7e\x47\xcc\x66\xc5\x97\x2b\x3a\x95\x3c\x68\xa7\x8a\xb7\xec\x49\x3f\x51\xf4\xba\x80\xf1\x18\xd5\xb7\x68\xc0\x1c\x7d\x7c\xc7\x96\x69\x15\x95\x36\xd1\x52\x31\xa5\xac\xf5\x14\x4f\xe4\x78\x35\x1d\x81\xf7\x0f\xb9\x21\xe7\x63\x51\x77\x64\xab\x94\x0b\x3d\x40\x3f\xaf\x67\x86\x8c\x6c\x4c\x89\xe1\x01\x3a\x58\xd6\x5a\x4c\xc6\xa4\x33\xbf\xdb\x1d\xbd\xca\xc0\x4a\x60\x6b\x1e\x27\x09\x5a\x58\xcf\x98\xad\xb2\x0d\xb3\x34\x11\x1e\x83\xbc\x7e\x58\xf9\x20\xd2\x0a\x76\x05\xe7\x91\x56\x42\xab\x49\x6b\x10\x08\x69\x45\x68\x0a\x7d\x95\xf4\x57\x32\xe2\xe2\x1b\x0c\xc0\xb6\x50\x4f\x47\x1b\x2c\x7b\xea\x07\x73\x7d\xfa\x11\xf4\xdf\xb1\x41\xbd\x6d\xec\x4b\x5d\xa7\x30\x8c\x1a\x73\x07\x2d\xe1\x4b\xae\x53\x68\x13\x87\x82\x6f\xea\x35\xab\xc6\xec\x54\x8e\xcd\xa0\x2f\xfe\x2e\x61\x65\xec\x11\x1b\x73\xa6\x95\x2e\x68\x59\xbe\x97\xa0\xf4\x89\xad\xa4\x76\xf0\x59\xb1\x29\xb1\xd2\x67\xdc\xa3\x07\xae\x95\x29\x84\x7a\x91\x53\x72\x10\x83\x2a\xa3\x5a\xc1\x06\xb3\xab\x49\x1a\xad\x9c\x46\x6b\xa5\x24\x35\xa0\xa5\xb3\x02\x47\x26\x02\xce\x0a\x80\xed\x3c\x4b\x19\x4e\x37\xc8\x62\x79\x9e\xc1\x26\x73\x8f\x04\xc5\x7f\xe6\x39\x5e\xda\x99\xda\x1b\x59\x3c\x31\xad\x2b\xea\xcd\x7e\xdc\x6c\xc0\x80\xac\xd6\xd4\x64\xb6\xde\xd0\x55\xdd\xea\x41\x27\x50\x83\xa0\xdb\x70\x16\x20\x37\xd5\x66\x0a\xff\xdd\x51\x4e\xc1\x29\xa6\xcd\xbb\x0f\xee\x94\xe5\x0e\x92\xa2\x4c\x24\x9c\x57\x2d\x99\x77\x75\xd7\xe4\x74\x15\x38\x85\xd7\x21\x4a\x33\x8e\x60\xe7\xb0\x3d\x96\xbb\xc4\x09\xb2\xf0\x02\xa5\x0c\x2f\x31\x22\xe5\x11\x2d\x71\xad\xe3\x6e\xfa\x79\xa1\x43\xb4\x93\xf8\x20\x88\x28\x37\x40\x5a\x1a\x60\x95\x6e\x11\x6f\xbe\x8a\xc9\xb7\xd9\x02\xbd\x67\x36\x05\x20\xcf\x0f\x11\x07\x88\x1a\xf1\x11\xab\x36\x55\x3f\x6d\x2a\xf5\xe8\x70\x85\x04\xfd\xb5\xc1\x04\xc9\xb0\xa9\xb1\x4b\xb2\xf8\x6c\xd4\x44\xb9\x75\x78\xd0\x50\xfa\xd3\xd0\xc6\x20\xaa\xd7\x4e\x2a\x7b\x20\x0e\x02\x47\xd0\xe7\x1b\x76\x44\xf7\x6f\x08\x4a\x16\xd6\xb1\x83\x9c\x63\x2d\x5e\x62\xdd\xa1\x09\xf7\x3f\xbf\x8a\xea\x5f\x3d\xee\x23\x86\x83\x4a\x1a\x48\xb3\x54\xa8\x6b\x62\xed\x18\x65\xdf\x14\x41\xa2\xe8\x23\xa2\xa1\xf3\x68\x69\x32\xd1\xd8\xf2\xc2\xd6\x9a\xe4\x81\x7e\xbf\xb4\xe7\x00\x93\xb5\xeb\x5b\x71\x73\xdb\x8a\x49\x2d\x9c\x52\x16\xa7\x73\x94\x2d\xb5\xea\x79\x19\x1c\xe9\x05\xdd\xfb\x07\x75\xc3\xe0\xab\x42\x18\x9e\x30\x65\x4a\xca\x3c\x8b\xcd\xd4\xb5\x14\x3b\x8e\xb0\x3a\x3a\x39\x3b\x0b\xdf\x8e\x76\x3b\x3a\x85\x67\xa3\xd3\xd0\x07\x5b\x02\x69\x85\x9f\x1a\xa6\x11\x68\xd3\xc9\x24\xf0\x81\x93\x3a\xf6\xe8\xec\xec\x74\x34\xb0\x05\x8a\x68\x1c\x48\x18\xee\x0e\xc9\x24\x08\xcf\xc1\x16\x49\xff\x45\x94\x67\x13\x1d\xa1\x3f\xd4\x7a\xa6\xd3\xd1\xc9\x69\xb0\x0b\xde\x86\xfa\x18\x01\xad\x0f\x0a\xc2\x93\xe0\x6c\x17\x86\x43\x35\x4a\xeb\x39\x3f\x79\xb3\x0b\x87\xbe\x2b\x47\x8d\x4e\x77\x9c\x72\xae\xe3\x37\xdb\xca\x86\x3c\xaf\xe5\xd5\x45\xbc\xa5\x29\xa3\x1d\xb8\x48\x89\xd4\x0d\xf6\x19\xe9\x00\x16\x63\x41\x19\x12\x61\xe8\xbb\x99\x76\x3a\xba\xcb\xd2\xb4\x54\xd8\x18\xe1\x49\x31\x2d\xe2\x42\xde\x2e\xef\x33\xc7\x79\x80\xe8\x1e\x3f\xe4\xba\x52\x95\xca\xd9\xaf\x57\x86\xfb\x14\x85\x52\xbb\x3a\x29\xef\x40\x3a\x82\x71\xc9\x25\x67\x71\x56\x5c\xa3\x16\x25\xe0\x19\xf4\xeb\x13\xcb\x80\xd9\x74\xd3\x21\x6f\x2e\xb4\x12\x6b\xe3\x5e\x88\x81\x06\x1b\xda\x8a\x04\xfd\xce\x6c\x43\x30\xd7\x39\xb7\xe0\xb6\x6b\x7a\xb9\x9a\x4e\x04\x6d\x97\x0d\xe1\x7a\x29\x0c\xd6\x09\x50\x38\xdd\xfe\x15\xa8\xcd\xef\x44\x29\x1e\x38\x74\x5e\x23\x69\x37\xbf\x60\x32\x09\x87\xd3\x69\x38\xec\x45\x13\x83\x3b\xe1\x24\x57\xf7\xec\x61\x1f\x47\x8d\x6a\xa2\x89\x25\x51\x45\x9c\x4c\x82\xd1\x74\x1a\x8c\xf6\xf2\xd4\x03\x58\x32\xb5\xab\x7d\x3a\xc1\xc3\x64\x72\xbe\x8f\xd1\x46\x41\xf0\x60\xdc\x46\x5b\xf8\xc0\x57\xd2\x68\x3c\x7d\xe0\x22\xdf\xbb\xb4\x1e\x16\xb4\x07\x04\x60\x3a\x9d\x36\x6d\xab\xb5\x9a\x46\x39\xb2\x66\x66\xf2\x76\xb3\x89\xea\x36\x5b\x9c\x61\x8f\xd1\x15\x2c\x1f\x4e\x47\x2e\xb0\x46\xa8\x68\xda\x4b\xc9\x54\xb1\x55\x57\xcd\xf7\xbe\xaa\x49\xe8\x6b\x89\x4a\x67\xa6\x2e\xb5\xef\xfd\x7e\x45\x35\x95\x70\x0b\x02\xcd\x3b\xec\x77\xfe\x38\x30\xd1\xec\x1c\x1f\x8c\x0d\x3c\x3a\xc3\x26\x97\xa3\x61\x1f\x97\xa6\xbb\x9c\xea\x25\x4b\xa1\xa0\x10\xf5\x03\x34\x8d\xfa\xf5\x08\xed\x4a\x71\x1b\x21\x6a\x9a\x09\x44\xd3\x69\xb7\x01\x96\x9c\xfd\x57\x80\xdb\xa5\xe6\x43\x71\xa3\xa6\x65\xf3\xd6\x60\x14\x35\x6d\x9b\x37\xf7\x58\x77\xb9\xbc\x7f\x01\x1b\xed\x3a\xb8\x21\x74\xe5\xd1\x4c\xf6\x6c\xa8\x2b\x39\x43\x17\x89\x67\x07\xdd\xd6\x5a\x2e\xb6\x87\x4c\x61\xf6\x6d\x3a\x95\x43\x38\x8c\x90\xa9\xbc\xce\x0d\xb7\xb2\xfa\x42\xa8\xb5\xf5\x55\xae\xe3\x10\xfc\xd6\x4a\x74\x7b\xed\xc5\x37\x7a\x0e\xb3\x5c\x7b\x9d\x47\x37\x97\x4f\x48\xa5\x53\x57\x65\x5e\x6b\x2a\x78\xd5\x62\x88\x49\x3d\x34\x71\x0e\xcb\xc1\xf7\xe4\x72\x15\x77\x16\xa6\x16\xcb\x32\x8b\xae\x32\xc2\x2c\x96\x59\xf3\x2c\x65\x31\x4e\xad\x38\xd5\xb2\xef\xa2\xbe\xca\xe0\xf1\x71\xa3\x34\xd8\xc5\x82\xaa\x18\x3a\x50\x26\x45\xde\x92\x64\x9f\xbf\x55\xb9\x47\xed\x38\x53\x17\xda\x1d\x2b\x44\x00\xe4\xb5\x7a\x86\x49\xae\xc5\x73\x36\x73\xba\x3c\xe8\x3c\x70\x54\x31\xab\x4a\x88\x31\x78\xd7\x6c\x71\x90\x78\x77\xda\x49\x59\xbc\x8f\x6b\x3d\x3e\x53\x8f\x15\x91\xd3\xa0\xcd\xd3\x56\xef\xf1\x51\x9c\x2f\xd1\x01\xeb\xa2\xcd\x8c\x52\xc0\x3b\x86\xf3\x4c\x16\x00\xcc\xed\x94\x6f\x9b\x4c\x00\xfd\x88\x69\x45\xb4\xab\xeb\x3b\x51\x8f\x87\x10\x56\x8f\xd2\xbc\xea\x4d\x9a\x31\xb6\xad\x5e\xb8\xb8\xcc\x21\x20\x97\x89\x6a\x3a\x21\x52\xe2\x99\x5e\x3e\xd4\xe2\x58\x27\x55\x59\xea\x72\xc2\x53\xc3\x6d\x06\x97\x55\x66\x1a\xf7\x0d\xe7\x39\xe2\x36\x83\xf6\xf2\xe4\x34\x00\x93\xc9\x68\x17\x9f\x8c\x4e\xab\xb9\xab\xde\xb9\x43\x5f\xcd\x0d\xce\x78\xd4\x1a\xee\x6c\x3e\x5b\xc0\xac\x6a\x30\x9b\x0e\x18\x31\xf9\x0d\x9f\x7b\x5e\xce\xe5\x30\xab\x02\x66\xc3\x61\x64\xc5\xb0\xc8\x72\xa9\x59\xed\x33\x95\xea\x66\x03\x28\x06\x46\x1d\xe3\xec\x6c\x3a\xe5\x19\xb9\xc8\xc3\x5d\x3b\x3b\xb1\x03\x99\x8d\x07\xc0\x51\x09\x79\x5e\xbb\x94\x30\x2b\x0f\x4e\x17\x98\x34\xef\x08\x8a\x0d\x6d\x6a\x26\xeb\x76\x5b\xb3\xd9\x97\x66\x19\xa7\x0f\xa7\x66\xc0\x7b\x41\x67\x09\x4a\x0f\x89\xa3\xdb\x74\xfa\x18\x5e\xc5\x74\x86\x0d\x4e\x56\x55\x64\xfe\x0d\xd5\xc9\x43\xdc\xa7\xe0\x55\xab\xd8\xa0\xa2\xac\x7d\xa8\xef\x2c\xa4\x29\x9f\xd7\x95\x9e\x94\x6c\xba\xe3\xc6\x7f\x52\x72\x98\x67\x29\x65\x16\x81\xf2\x42\xc5\x5b\x12\x84\xfe\x46\x76\xf1\x8c\x1d\x44\x05\x90\x45\x6d\xea\xa6\xf0\xf8\xd8\xdd\x2e\x45\xd7\x38\x83\x44\xbc\x72\x77\xe5\xaf\x07\xc6\x4b\x18\xe6\x70\x9b\x8b\x2a\x3d\x65\x56\xac\x5e\x49\xaa\xca\x88\x1d\xf8\xe1\x10\x28\x72\x2b\xf8\xe3\xed\xcd\xb5\x27\x5d\x24\x5e\xbe\xd8\xb4\xe8\xd9\xc0\xb8\x56\x91\xb3\x57\x45\xcf\xba\xd9\x93\x82\x9e\x9f\x14\xd8\x31\x30\x3e\xfe\xb7\x63\x77\xd3\xea\xf9\x39\x66\x2b\x3b\x76\xd7\xad\x8e\xbb\x97\x35\x9f\x91\xb5\x3a\xe4\x3b\x7e\x3b\x76\x97\x05\x7b\x0b\xd8\xf5\x5e\x9f\xb3\x62\x7e\x6d\x5d\xef\xd1\x9e\x54\xdb\x71\xf1\x66\xba\xfa\xb5\x4d\x7b\xa4\x1d\xbb\x8b\x82\xfc\x23\x34\xbd\x8e\xe6\x04\x62\x75\x6d\x60\x3f\x82\xe8\xd7\xf3\xdf\x32\xf2\x27\x22\xa1\x47\x51\xba\xb0\xe3\xfa\xfb\x44\x1b\x80\xbc\xdc\x6e\xa5\x39\xd4\x66\xee\xf1\x31\xd7\x14\x79\xc3\xb4\x4d\xb2\xa7\x71\xea\x4a\xed\x18\x13\x57\x44\x57\x63\x9a\x47\xe8\xff\xd6\x3c\x0c\x51\x4f\x0f\xac\x2c\xfa\x9f\xff\x04\x00\x00\xff\xff\x6e\xe9\x4e\x51\x15\x35\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/std.js"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
