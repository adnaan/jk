// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package lib

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 11, 10, 0, 11, 53, 702359613, time.UTC),
		},
		"/std.js": &vfsgen۰CompressedFileInfo{
			name:             "std.js",
			modTime:          time.Date(2018, 11, 10, 0, 16, 18, 577188721, time.UTC),
			uncompressedSize: 13386,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\x5d\x6f\xe3\xb6\xd2\xbe\x7f\x7f\x85\x92\x8b\x40\xac\x64\x41\x52\x1c\x6f\xd6\x32\xbd\xd8\x6d\x93\x36\xc5\x36\x29\x36\x69\x8b\x36\x08\x0c\xc5\xa6\x62\xbe\xd5\x4a\xae\x48\x6d\x4e\x8e\xed\xf3\xdb\x0f\xf8\x21\x89\x94\x28\xdb\x29\xf6\x00\xbd\x69\x6a\x91\xf3\xcc\x70\x3e\xc8\x99\x21\xf7\x4b\x5c\x58\x14\xd2\xcd\x66\xbd\x8d\xa8\x77\x53\xd2\x55\x49\x2f\xf3\xe2\x73\x4c\xe1\xfa\x7d\x49\xf3\xb1\xef\xfe\x78\x7b\x73\x3d\x0e\xdc\xdf\xdf\xff\xf4\x71\x1c\xb2\x59\xbf\x15\x98\xa2\xf7\xc5\x13\x81\x49\x99\xcd\x29\xce\x33\x1b\xac\xe9\x12\x13\xef\xf1\x11\x66\x65\x9a\x46\xf2\xc7\x6c\x95\x13\xe8\x6b\x24\xde\xaa\xc8\x69\x4e\x5f\x56\xc8\x9b\xcd\x70\x86\x69\x83\x41\x5d\x54\xc3\x70\x4a\x5a\xe1\x40\x14\x15\x88\x96\x45\x66\xb1\x0f\x3a\xde\x13\xa2\x9f\xf2\x9c\xbe\x27\x06\xa9\x90\x8b\xc1\x5a\x50\xda\x78\xb3\xc9\xd0\xb3\xa5\x90\x02\x29\x81\x8d\xbc\x02\xc5\x8b\xab\x8c\x9e\x86\x36\xf2\x56\x39\xc1\x62\x4d\xc0\x51\x7f\xb9\x08\xf4\xad\x64\x15\xd3\xa5\xb2\x0e\xb0\x66\x5a\x45\x50\x4a\xef\xcd\x66\x79\x92\x10\x44\x6d\x65\x71\xee\x10\x54\x6b\x42\xef\x9a\x89\x84\x16\x38\x7b\x52\x27\x3a\xc8\xa5\x60\xcc\xb4\xda\xc7\xfd\x4b\x9c\x96\xe8\xb5\xec\x47\x5f\x8d\x3d\xfb\x8f\xea\x08\x07\x30\x3f\x37\x30\x97\x26\x38\xd7\x99\x83\xb1\xee\x94\x1e\xf3\x49\x5d\x12\x42\xe3\x82\x1a\x8c\x4f\xc1\x9a\x8a\xc1\x9b\xc7\xff\x47\x73\x6a\x9f\xb6\xec\x17\x2f\x16\x3f\xeb\x86\xe3\x0e\xc8\xbe\x5f\x62\x94\x2e\x6e\x84\xe0\xbe\x8b\x5c\xbf\x4b\xfa\x6b\x4b\xeb\x46\xda\xc0\x4c\x7b\xa7\xa9\x8c\x7b\x29\xaa\x49\xb9\x12\x42\x17\xbb\x86\x95\xb7\xa0\x50\xb6\x30\x2f\x5c\xda\x80\x4d\x90\x8b\x6f\x34\xbe\x8d\xc4\x28\xe2\x31\x8f\x3c\x4e\xbc\xbe\xbe\xb9\xbe\x18\xfb\x6e\x0d\x37\x0e\xd8\xd8\x4f\x88\x90\xf8\x09\x1d\x1a\xe7\x35\xc1\x57\x89\xf2\x06\xad\x8e\xf1\x8e\x3c\xb4\x1b\xe1\x35\x59\x1d\xdf\x54\x89\x6f\xaa\xc5\xb7\xfa\xcb\xa5\xc0\xbc\x82\xb8\x78\x22\x77\x06\x27\xa7\x87\x06\x38\xd5\x9c\xfc\x17\xdc\xf6\x72\x0a\xc6\xc2\x0c\x1e\xb3\x42\xbf\x10\x5f\x27\xc6\xcb\x4c\x28\xae\x15\x67\x22\xc4\x1b\xd6\x3c\x72\xba\xfa\x6e\x07\x55\xa8\x29\x2d\x5e\x2c\xde\x77\xb4\xc5\x6d\x44\x75\xff\xf6\x5d\xec\x2a\x6b\x36\x81\x1c\x1a\x5b\x0d\x21\xca\x16\x26\x81\xf7\x07\x03\x86\xeb\x6d\x84\xbd\xdb\xab\x3f\x2e\x6e\x2e\x67\xb7\x3f\xdc\x7c\xba\x83\x61\xf3\xe1\xea\xfa\x0e\x0e\x23\xec\x5d\x5e\x7d\xbc\x98\x5d\x7d\x77\x71\x7d\x77\x75\x79\x75\xf1\x69\xf6\xf1\xe2\xfa\xfb\xbb\x1f\xf8\xd0\x45\x36\xcf\x17\x38\x7b\x82\xeb\x5f\xee\x2e\xcf\x67\x1f\x7e\xbf\xbb\xb8\x1d\x07\xee\x2f\x77\x97\xc1\x68\x76\x7b\xf7\xe9\xea\xfa\x7b\x76\x76\x62\x0f\x33\x2f\x84\xcc\x4f\xb9\x3f\xbe\x2f\x8a\xf8\xc5\x0e\x41\x84\xbd\x24\xcd\xe3\x6a\xec\x52\xfc\xbf\x18\x95\x44\xde\x63\x99\x24\xa8\xa8\xa7\x8e\x86\xcd\xd4\xd1\xb0\x6f\x2a\x26\x1f\x31\xa5\x29\xba\xc8\x16\x38\xce\x38\x05\x73\xc0\x60\x24\x08\xaa\xdf\xe7\xe2\xe7\x7d\xe0\xfa\x0f\xa0\x22\xbf\xf7\x1f\x20\x84\x41\x84\xbd\x8f\x79\xf6\x64\x0a\xe1\x34\x7f\x86\x74\xe3\x8b\x08\x5e\xe2\xa7\x25\x44\x1b\x7f\x2b\x09\xbc\x79\x81\x62\xda\xde\x23\xab\x98\x80\xd0\x3f\x39\x41\x10\xfa\xef\xe4\xec\x3f\x2e\x3e\xdd\x8c\x99\x3c\xe2\x37\x9f\x5d\x43\x29\xc7\x4d\x2e\x57\xac\x86\xa3\xdc\x01\x2a\x99\xa6\xd3\xa9\x0f\x9c\x5a\xa8\x6f\x86\xe1\xdb\xe1\xdb\xd1\x9b\xf0\xed\xc8\x00\x88\xfe\x2a\xe3\x54\x8f\x2d\x65\x1b\xe2\x4b\x84\x94\xfd\x39\x39\x69\x96\x09\x29\xff\x5b\xc3\x31\xe1\xa1\x22\xbc\xef\xfa\x4c\xfb\x1f\x4a\x9c\x2e\x50\xa1\x81\xe3\xc4\x3e\xaa\xbd\x32\xf0\xc3\xe1\x16\xa5\x04\x55\x5e\xba\xad\x36\x43\xec\x7d\x78\xa1\xe8\x03\xb7\x84\x17\xa7\x69\x3e\x8f\x29\xb2\x11\x10\xba\x26\xab\x78\x8e\x20\x12\x3f\x3e\xe3\x2c\x4e\xf1\x53\x06\x03\xf1\xfb\x0b\x8d\x1f\x53\xa4\xec\xd0\xe2\xc3\x0c\x67\xb3\x92\x20\x28\xcd\x85\xc9\x35\x22\x14\x2d\x60\x12\xa7\x44\x22\xe5\x3c\x3e\x66\x3c\xc0\xab\x79\x82\x98\xc0\xfb\x07\xf9\x1b\xcd\x69\x5e\xcc\xb2\xf2\xf3\x0c\xa5\xe8\x33\xa9\xe6\x25\x79\x31\x47\xb3\x05\x4a\xe2\x32\xa5\x44\xa0\x6e\x1b\x1d\x28\x1a\xe7\x33\xbf\xab\x27\xaa\x7b\x8b\x01\x88\x9a\x41\x16\x31\x8d\x85\x76\xba\x8e\x60\x49\x25\x9a\x29\x63\xd2\x78\x7c\x3f\xad\xf7\xf8\x42\x11\xb1\x81\x47\xca\xc7\x98\x07\x47\x35\xa0\x1e\x19\x9d\x4f\xc2\xeb\xe4\x66\x0c\x40\x9f\x04\x9c\xf9\x3e\xf1\x6b\x11\x44\x3c\x7a\x24\xc5\x73\xf4\x15\xc5\x58\x15\x68\xd5\x8a\x4e\x9c\xd8\x74\xaa\x39\x95\x34\x4a\xed\x63\x74\xcb\x3c\xb5\x80\xff\xa9\x05\x99\xc7\xab\x78\x8e\xe9\x8b\x0d\x06\x8d\x6f\x3a\x08\x38\xc1\x09\x1d\x04\xd1\xf3\x12\xa7\x52\x6a\x3e\x32\x29\x1c\xea\x20\x11\x00\x04\x76\x41\x22\x25\x02\xa4\xc8\x4f\x45\xfe\xdc\x44\x43\xc5\x58\x0d\x05\xc7\x00\x34\x20\x22\x98\x56\xf1\xc2\x2e\xfa\x54\x10\x2f\x34\x07\x4c\xf2\xc2\x16\x91\xe8\x47\x68\x42\x23\xe4\x38\x75\xb6\xe2\x3d\xb3\xe4\x88\x1f\x5f\x03\x65\xa5\xec\x10\x32\x83\xd7\xf3\xbb\x3e\xae\xa1\x35\x58\x03\x18\xf0\x34\x64\x17\x5a\x30\xda\x09\x17\x8c\x34\xbc\x70\x2f\xde\x69\xb8\x13\x8f\xe5\x4c\x0a\xde\x70\x2f\x9e\xba\x33\x1b\xf0\x46\x43\x0d\xef\x7c\x37\x9e\x3c\x08\xfb\x11\xe5\x84\xd7\xc8\xd8\x39\x3f\x8c\x98\x07\xcb\x19\x2f\x16\x66\x1b\xb3\xf0\xb2\x03\x76\x10\xf0\x9f\x8a\xbd\x77\x22\x99\xec\xcb\xa1\xc2\x0e\x14\xb3\xf5\x4e\x2c\x93\xe6\x38\xd6\xb0\x83\xc5\x74\xb8\x13\xcb\xa4\x31\x8e\x75\xde\xc1\x62\xba\xeb\xc7\xea\xb5\xa9\x49\xb2\xda\xbe\x7b\xf0\x0e\x95\xae\xb6\xed\x0e\xbc\x2a\x4b\xd5\xf6\x46\x96\xc4\xb2\xdd\xb1\x7b\x42\x6d\x36\xe8\x08\x62\xc9\x53\x7a\x43\x73\x50\xa7\x39\x65\xcc\xf6\x72\xd3\xcc\xfe\x4a\x76\xc1\xe8\xf5\xfc\x34\x03\xbc\x92\xdf\x69\xf8\x7a\x7e\x9a\x81\x76\xf3\x3b\xaa\x92\x32\x1b\x03\x8d\xef\x68\xf8\x4a\xbe\x5d\x57\x7b\xcd\x4a\x2b\xdf\xfb\x1b\x3c\x5f\xb1\x5a\x03\xcf\x57\xaf\x53\x94\x44\x7f\x93\xa5\xac\xa7\x5e\xc7\xf1\x96\x16\xe5\xdc\xc8\x51\x01\xcf\x78\x82\x79\x20\x72\x26\xb3\x51\x3d\x55\xa6\x47\x50\x4f\x65\xd6\x74\x59\xe4\xcf\x16\xcb\xb5\x2f\x8a\x22\x2f\xec\xe3\xcb\x34\xa6\x22\x33\x20\x63\x8b\x70\xb9\xac\xcf\x25\xa1\xd6\x23\xb2\x08\x2a\x70\x9c\xe2\x7f\xa3\x85\x85\xb3\x14\x67\xc8\x3b\xee\xe5\x9f\xd3\xeb\x96\x08\x8d\x06\xab\x64\x79\x1f\x7b\x91\x40\xd7\x6c\x63\x06\x23\x84\xc9\x72\x2e\x90\x58\x65\xbf\x14\x4c\x47\xdd\x9d\x4c\xe4\xe0\xf7\xf4\x41\x57\x86\x19\x22\x6f\x39\x43\x27\xad\x34\x26\x6c\x2a\x96\x9e\x6f\x19\x8b\x69\x25\x5f\x63\x36\x3f\x39\x0d\xc3\x20\x0c\xcf\x86\x6f\xc2\x7d\x2a\x9a\xc7\x19\xd3\x05\xe3\x61\x89\xc4\xd6\x7a\x44\x2f\x79\xb6\xb0\x42\xeb\x09\x3f\xc5\x3c\xe9\x65\x0a\x12\x79\x26\x9a\x4c\x82\x48\xe4\x8a\xe6\x92\xa8\x00\x11\xf1\x08\xa2\x3f\x57\xc9\x6f\x31\x40\xec\x53\x9d\xbf\x23\x6a\xd3\xea\x97\xcb\x07\xa5\x3e\x48\xaf\x8b\x77\xe2\x49\x3d\x51\xd4\xbe\x80\xf1\x18\x55\x4d\x34\xa0\x8e\x3a\xbf\xc7\x64\x4a\x47\xa5\xcb\xb4\x76\x4c\xa1\x6b\xb5\xc4\xe3\x35\x9e\xe6\x23\xf0\xfe\x61\x6b\xa8\xf9\x68\xd4\x9f\xd9\x4a\xe7\x42\x0f\xd0\xdf\xea\x95\x21\x2d\x4a\x53\x61\x78\x80\x0f\xd6\xbd\x16\x53\x30\xa9\xc2\x6f\x36\x47\xaf\x0a\xb0\x1a\xd8\x9a\xc7\x69\x8a\x16\xd6\x33\xa6\xcb\xbc\xa4\x96\xa2\xc2\x63\xb0\xd5\x0f\x2b\x1f\x44\x4a\xc3\xae\x92\x3c\x52\x5a\x68\x9a\xb6\x06\x01\xd7\x56\x84\xa6\xd0\x97\x45\x7f\xa3\x23\xa6\xbe\xc1\x00\xac\x2b\xf7\x74\x94\xc9\x62\x44\x3f\x98\x75\xf2\x23\xe8\xbf\xa3\x03\xfd\xdb\xd8\x17\xbe\x4e\x60\x18\xb5\x68\x07\x1d\xe5\x0b\xa9\x33\x68\x17\x0e\x01\xdf\xe8\x3d\xab\x16\x75\x26\xe6\xe6\xd0\xe7\x7f\x13\xd8\x04\x7b\x44\xc7\x4c\x68\xe9\x0b\x4a\x95\xef\xa5\x28\x7b\xa2\x4b\xe1\x1d\x8c\x2a\x36\x15\x56\x2a\xc5\x3d\x7a\x60\x5e\x99\x41\xa8\x36\x39\x85\x04\x31\x68\x2a\xaa\x12\xb6\x84\x2d\x27\x59\x54\x3a\xad\xaf\x8d\x93\x68\x40\x89\x53\x82\x23\x13\x03\xa7\x04\x60\x3d\xcf\x33\x8a\xb3\x12\x59\x74\xbb\xcd\x61\x5b\xb8\xc7\x02\xc5\x7f\x6e\xb7\x38\xb1\x73\x69\x1b\xd1\x3c\x31\xad\x2b\xda\x59\xfd\xb8\xf9\x80\x02\xd1\xad\xd1\x74\xb6\x2a\xc9\x52\x8f\x7a\xd0\x0b\xd4\x62\xe8\xb6\x36\x0b\xb0\x35\xf5\x66\xaa\xfd\xbb\xa7\x9d\x82\x33\x4c\xda\xd7\x18\x6c\x53\x16\x16\x2c\xaa\x36\x11\xdf\xbc\xb4\x62\xde\x55\xb7\x26\xa7\xaf\xc1\xc9\x77\x9d\x42\x7a\xc6\x11\xec\x9d\xb6\x27\x72\x13\x9c\x22\x0b\x2f\x50\x46\x71\x82\x51\x51\x1f\xd1\x02\xd7\x3a\xee\xe7\xbf\xad\x7c\x88\xf4\x32\x1f\x04\x11\x61\x01\x48\xea\x00\x6c\xca\xad\xc2\x9b\x2f\xe3\xe2\xdb\x7c\x81\xde\x53\x9b\x00\xb0\xdd\x1e\xa2\x0e\x10\xb5\xf2\x23\xda\x18\x55\x3d\x6d\x1a\xf7\xe8\xd9\x0a\x0b\xf4\x57\x89\x0b\x24\xd2\xa6\x96\x95\x44\xf3\xd9\xe8\x89\xc2\x74\x78\xd0\x72\xfa\xd3\xd0\xc6\x20\xd2\x7b\x27\x4d\x3c\x14\x0e\x02\x47\xd0\x67\x06\x3b\x22\xfb\x0d\x82\xd2\x85\x75\xec\x20\xe7\x58\xc9\x97\x68\x7f\x6a\xc2\xf6\x9f\x5f\x79\xf7\x4f\xcf\xfb\x0a\xc3\x41\x25\x02\xa4\xdd\x2a\x54\x3d\x51\x3b\x46\xe9\x37\x55\x92\xc8\xc7\x0a\xfe\xa1\xf7\x68\x69\x0b\xd1\x32\x79\x15\x6b\x6d\xf6\x40\xbd\x5f\xda\x73\x80\x89\xde\xf5\x2d\xbf\x0f\xed\xe4\xa4\x16\xce\x08\x8d\xb3\x39\xca\x13\xa5\x7b\x5e\x27\x47\x6a\x43\xf7\xfe\x41\xde\x30\xf8\xb2\x11\x86\x27\x54\x86\x92\x0c\xcf\xca\x98\xaa\x97\x62\xc7\xe1\x51\x47\x26\x67\x67\xe1\xdb\xd1\x66\x43\xa6\xf0\x6c\x74\x1a\xfa\x60\x5d\x40\xd2\xe0\x67\x06\xb2\x02\xda\x64\x32\x09\x7c\xe0\x64\x8e\x3d\x3a\x3b\x3b\x1d\x0d\x6c\x8e\xc2\x3f\x0e\x04\x0c\xdb\x0e\x8b\x49\x10\x9e\x83\x35\x12\xfb\x57\x21\x77\x36\x3e\x10\xfa\x43\x65\x64\x3a\x1d\x9d\x9c\x06\x9b\xe0\x6d\xa8\xce\xe1\xd0\xea\xa4\x20\x3c\x09\xce\x36\x61\x38\x94\xb3\x94\x91\xf3\x93\x37\x9b\x70\xe8\xbb\x62\xd6\xe8\x74\xc3\x38\x6f\x55\xfc\xf6\xb7\xfa\xc3\x76\xab\xd5\xd5\x55\xbe\xa5\x38\xa3\x1d\xb8\x48\xaa\xd4\x0d\xf6\x05\xe9\x00\x56\x73\x41\x9d\x12\x61\xe8\xbb\xb9\x72\x3a\xba\x49\x1d\x5a\x32\x6d\x8c\xf0\xa4\x22\x8b\x98\x92\xd7\xc9\x7d\xee\x38\x0f\x10\xdd\xe3\x87\xad\xea\x54\xb5\x73\xee\xf6\x2b\xc3\x7d\x8a\x44\xd1\xae\x4e\xea\x3b\x90\x9e\x64\x5c\x48\xc9\x44\x9c\x55\xd7\xa8\x55\x0b\x78\x06\x7d\x9d\xb0\x4e\x98\x4d\x37\x1d\xe2\xe6\x42\x69\xb1\xb6\xee\x85\x28\x68\x89\xa1\xac\x88\xf3\xef\xad\x36\xb8\x70\xbd\xb4\x95\xb4\x7d\xe4\xf5\x6a\x7a\x11\x14\x2b\x1b\xd2\xf5\x5a\x19\xb4\x17\xa0\xda\x74\x77\xaf\x40\x1a\xbf\x17\xa5\x7a\xbd\xd0\x7b\x8d\xa4\xdc\xfc\x82\xc9\x24\x1c\x4e\xa7\xe1\x70\x27\x1a\x9f\xdc\x0b\x27\xa4\xba\xa7\x0f\xfb\x24\x6a\x75\x13\x4d\x22\xf1\x2e\xe2\x64\x12\x8c\xa6\xd3\x60\xb4\x57\xa6\x1d\x80\xb5\x50\x1b\xed\xa7\x13\x3c\x4c\x26\xe7\xfb\x04\x6d\x35\x04\x0f\xc6\x6d\x7d\x0b\x1f\xd8\x4a\x5a\x1f\x4f\x1f\x98\xca\xf7\x2e\x6d\x87\x08\xca\x03\x02\x30\x9d\x4e\xdb\xb1\xd5\x59\x4d\xab\x1d\xa9\x85\x99\xb8\xdd\x6c\xa3\xba\xed\x2f\xce\x70\x47\xd0\x55\x22\x1f\xce\x47\x2c\x50\x63\x54\x7d\xda\xcb\xc9\xd4\xb1\x95\x57\xcd\xf7\xbe\xec\x49\xa8\x6b\x89\xea\xcd\x4c\x5e\x6a\xdf\xfb\xbb\x1d\xd5\xd4\xc2\xad\x18\xb4\xef\xb0\xdf\xf9\xe3\xc0\xc4\xb3\x77\x7e\x30\x36\xc8\xe8\x0c\xdb\x52\x8e\x86\xbb\xa4\x34\xdd\xe5\x34\x2f\x59\x2a\x07\x85\x68\x37\x40\x3b\xa8\x5f\x8f\xd0\xed\x14\x77\x11\xa2\x76\x98\x40\x34\x9d\xf6\x07\x60\x2d\xd9\xff\x04\xb8\xdb\x6a\x3e\x14\x37\x6a\x47\x36\xfb\x1a\x8c\xa2\x76\x6c\xb3\xcf\x3b\xa2\xbb\x5e\xde\x3f\x40\x8c\x6e\x1f\xdc\x90\xba\xb2\x6c\x26\x7f\x36\xf4\x95\x9c\xa1\x8b\xf8\xb3\x83\xfe\x68\xad\x17\xbb\x83\x4d\x15\xf6\x5d\x3e\xcd\x86\x70\x18\x23\x53\x7b\x9d\x05\x6e\x13\xf5\x95\x52\xb5\xf5\x35\x5b\xc7\x21\xf8\x9d\x95\xa8\xf1\xba\x13\xdf\xb8\x73\x98\xf5\xba\x73\xf3\xe8\x97\xf2\x09\xc9\x72\xea\xaa\xae\x6b\x4d\x0d\x2f\x2d\x87\x98\xe8\xa9\x89\x73\x58\x0d\xbe\xa7\x96\x6b\xa4\xb3\x30\xb1\x68\x9e\x5b\x64\x99\x17\xd4\xa2\xb9\x35\xcf\x33\x1a\xe3\xcc\x8a\x33\xa5\xfa\xae\xfa\xab\x14\x1e\x1f\xb7\x5a\x83\x7d\x22\xc8\x8e\xa1\x03\x45\x51\xe4\x25\x45\xfe\xf9\x5b\x59\x7b\x68\xc7\x99\xbc\xd0\xee\x59\x21\x02\x60\xab\xf5\x33\x4c\x7a\xad\x9e\xb3\x99\xcb\xe5\x41\xef\x81\x23\x9b\x59\x4d\x41\x8c\xc1\xbb\xf6\x17\x07\x81\x71\xff\xf9\x2d\xdf\xc7\x75\x1e\x9f\xc9\xc7\x8a\xc8\x69\xf1\x66\x65\xab\xf7\xf8\xc8\xcf\x97\xe8\x80\x75\x91\x76\x45\xc9\xe1\x1d\xc3\x79\x26\x1a\x00\xe6\xef\x84\x99\x4d\x14\x80\x7e\x44\x95\x26\xda\xd5\xf5\x1d\xef\xc7\x43\x08\x9b\x47\x69\x5e\xf3\x26\xcd\x98\xdb\x36\x2f\x5c\x5c\xea\x14\x60\x2b\x0a\xd5\x6c\x52\x08\x8d\xe7\x6a\xfb\x50\xc9\x63\x9d\x4c\x56\xa9\xc9\x84\x95\x86\xeb\x1c\x26\x4d\x65\x1a\xef\x9a\xce\x6a\xc4\x75\x0e\xed\xe4\xe4\x34\x00\x93\xc9\x68\x13\x9f\x8c\x4e\x1b\xda\x72\x27\xed\xd0\x97\xb4\xc1\x19\xcb\x5a\xc3\x8d\xcd\xa8\x39\x4c\xa9\xc1\x2c\x7b\x60\x38\xf1\x1b\x46\x7b\x5e\xd3\x32\x98\xb2\x82\x59\x32\x18\xd1\x31\xac\xaa\x5c\x62\x76\xfb\x5c\x96\xba\xf9\x00\xf2\x89\x51\xcf\x3c\x3b\x9f\x4e\x59\x45\xce\xeb\x70\xd7\xce\x4f\xec\x40\x54\xe3\x01\x70\x64\x41\xbe\xd5\x2e\x25\xcc\xce\x83\xb3\x05\x2e\xda\x77\x04\x95\x41\xdb\x9e\x49\xfb\xb7\xad\xd9\xec\x4b\xbb\x8d\xb3\x0b\x47\x0b\xe0\xbd\xa0\xb3\x14\x65\x87\xe4\xd1\x5d\x3e\xbb\x04\x5e\xc6\x64\x86\x0d\x9b\xac\xec\xc8\xfc\x13\xba\x93\x87\x6c\x9f\x5c\x56\xa5\x63\x83\xaa\xb6\xf6\xa1\x7b\x67\xa5\x4d\xf1\xbc\xae\xde\x49\x8b\xb2\x3f\x6f\xfc\x3b\x2d\x87\x79\x9e\x11\xca\xb6\x1f\xed\x0d\x7a\x54\xd1\x5b\xc4\x26\x6e\x06\x8f\x8f\xdd\x1c\x16\xe2\x65\xfa\x5a\x90\x24\xf2\x15\xa4\xec\x7c\xd8\x81\x1f\x0e\x81\x84\x8b\xe1\x8f\xb7\x37\xd7\x9e\xd8\x02\x71\xf2\x62\x93\x6a\xa4\x84\x89\xd6\x71\xb3\xe3\x6a\x64\xd9\x1e\xc9\xc0\x8e\xd7\xff\x76\x02\x8c\xef\xf4\xed\xc4\x2d\x3b\x23\x3f\xc7\x74\x69\x27\xee\xb2\x33\x70\xf7\xb2\x62\x14\x79\x25\xc3\x0a\xf6\x3d\xba\x67\xfc\xcc\x4f\xa6\xf5\x11\xe5\x5d\xb4\x9d\x54\x0f\x9f\x9b\x7f\x88\xd2\x9d\x69\x27\xee\xaa\x62\xbf\x80\xa6\x27\xce\x8c\x41\x22\x7b\xff\xf6\x02\x44\xbf\x9e\xff\x96\x17\x7f\xa2\x22\xf4\x08\xca\x16\x76\xa2\x3f\x32\xb4\x01\xd8\xd6\xc6\x93\xe6\x27\x36\x75\x8f\x8f\x99\xb9\xc5\x35\xd1\x3a\xcd\x9f\xc6\xd9\x56\xee\xf6\xfc\x57\xee\xe6\x8a\xf9\xc7\x85\xcb\xd3\xa6\x31\xd9\x46\xe8\x5f\x2b\x96\x5f\xc8\x37\x05\x56\x12\xfd\xdf\x7f\x03\x00\x00\xff\xff\xb4\xf0\x4c\x6f\x4a\x34\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/std.js"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
