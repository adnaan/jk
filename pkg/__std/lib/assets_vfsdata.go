// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package lib

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 11, 12, 22, 56, 57, 616064843, time.UTC),
		},
		"/std.js": &vfsgen۰CompressedFileInfo{
			name:             "std.js",
			modTime:          time.Date(2018, 11, 12, 23, 37, 39, 761698874, time.UTC),
			uncompressedSize: 13369,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5b\x6d\x6f\xdb\xb6\xb7\x7f\x7f\x3f\x85\x92\x17\x81\x38\xc9\x82\xa4\x38\x6e\x6a\x99\x2e\xda\x2d\xd9\x32\x74\xc9\xd0\x64\x1b\xb6\x20\x30\x14\x9b\x8a\x79\xe7\x4a\x1e\x49\x37\x37\xb3\x7d\x3f\xfb\x1f\x7c\x90\x44\x4a\x94\xed\x0c\xfd\x03\x7b\x53\x57\x7c\xf8\x9d\xc3\xf3\x40\x9e\x73\xc8\x7c\x49\x89\xc3\x20\xdb\x6c\xd6\xdb\x84\x05\x97\x05\xf9\x9c\x32\xb8\x7e\xbf\x62\xc5\x30\xf4\x7f\xbc\xbd\xb9\x1e\x46\xfe\xef\xef\x7f\xfa\x38\x8c\x79\xff\x6f\x04\x33\xf4\x9e\x3c\x51\x98\xad\xf2\x29\xc3\x45\xee\x82\x35\x9b\x63\x1a\x3c\x3e\xc2\x7c\xb5\x58\x24\xea\x63\xb2\x2c\x28\x0c\x8d\x29\xc1\x92\x14\xac\x60\x2f\x4b\x14\x4c\x26\x38\xc7\xac\xc6\x60\x3e\xaa\x60\xc4\x4c\x56\xe2\x40\x94\x10\xc4\x56\x24\x77\x78\x83\x89\xf7\x84\xd8\xa7\xa2\x60\xef\xa9\x85\x2b\xe4\x63\xb0\x96\x33\x5d\xbc\xd9\xe4\xe8\xd9\xd1\xa6\x02\xc5\x81\x8b\x02\x82\xd2\xd9\x55\xce\x4e\x63\x17\x05\xcb\x82\x62\xb9\x26\xe0\xe9\x5f\x3e\x02\x5d\x2b\x59\xa6\x6c\xae\xad\x03\xac\xb9\x3c\x11\x54\xdc\x07\x93\x49\x91\x65\x14\x31\x57\x5b\x9c\xdf\x07\xe5\x9a\xd0\xbb\x7a\x20\x65\x04\xe7\x4f\xfa\x40\x0f\xf9\x0c\x0c\xb9\x54\xbb\xa8\x7f\x49\x17\x2b\xf4\x5a\xf2\x83\xaf\x46\x9e\xff\xa3\x1b\xc2\x01\xc4\xcf\x2d\xc4\x95\x0a\xce\x4d\xe2\x60\x58\x9a\x63\xc0\xad\xd1\xe4\x81\xb2\x94\x30\x8b\xda\x19\x58\x33\xd9\x79\xf3\xf8\xbf\x68\xca\xdc\xd3\x86\xe6\xd2\xd9\xec\x67\x53\x65\xc2\xf4\x78\xfb\x25\x46\x8b\xd9\x8d\x64\x39\xf4\x91\x1f\xb6\xa7\xfe\xda\x90\xb7\x75\x6e\x64\x9f\x7b\x67\x08\x4b\xd8\x27\xaa\xa6\x8a\xe5\xc7\x3e\xf6\x8d\x35\x37\x40\x50\x3e\xb3\x2f\x59\xc9\x9d\x0f\x50\xcb\xae\xa5\xbc\x4d\x64\x2f\x12\x1e\x8e\x02\x31\x79\x7d\x7d\x73\x7d\x31\x0c\xfd\x0a\x6e\x18\xf1\xbe\x9f\x10\xa5\xe9\x13\x3a\xd4\xb7\xab\x09\x5f\xc5\xb3\x6b\xb4\xca\xaf\x5b\xfc\xb0\xb6\x57\x57\xd3\x2a\x9f\x66\x9a\x4f\x33\xc3\xa7\xf5\x2f\x9f\x01\xfb\x0a\x52\xf2\x44\xef\x2c\x86\xcd\x0e\x75\x6a\x66\x18\xf6\x2f\xb8\x69\xd9\x0c\x0c\xa5\x1a\x02\xae\x85\x6e\x26\xbe\x8e\x5f\xaf\x72\x29\xb8\x86\x6f\x49\xb7\xae\x49\x0b\x9f\x69\xcb\xbb\xe9\x4e\xb1\x21\xb4\x74\x36\x7b\xdf\x92\x96\xd0\x11\x33\x2d\x3b\xf4\xb1\xaf\xad\xd9\x06\x72\xa8\x57\xd5\x13\x51\x3e\xb3\x31\xbc\xdf\x19\x30\x5c\x6f\x13\x1c\xdc\x5e\xfd\x71\x71\x73\x39\xb9\xfd\xe1\xe6\xd3\x1d\x8c\xeb\x86\xab\xeb\x3b\xd8\x4f\x70\x70\x79\xf5\xf1\x62\x72\xf5\xdd\xc5\xf5\xdd\xd5\xe5\xd5\xc5\xa7\xc9\xc7\x8b\xeb\xef\xef\x7e\x10\x5d\x17\xf9\xb4\x98\xe1\xfc\x09\xae\x7f\xb9\xbb\x3c\x9f\x7c\xf8\xfd\xee\xe2\x76\x18\xf9\xbf\xdc\x5d\x46\x83\xc9\xed\xdd\xa7\xab\xeb\xef\xf9\x79\x89\x03\xcc\xad\x10\x72\x3b\x15\xf6\xf8\x9e\x90\xf4\xc5\x8d\x41\x82\x83\x6c\x51\xa4\x65\xdf\xa5\xfc\xbf\xec\x55\x93\x82\xc7\x55\x96\x21\x52\x0d\x1d\xf4\xeb\xa1\x83\x7e\xd7\x50\x4c\x3f\x62\xc6\x16\xe8\x22\x9f\xe1\x34\x17\x33\xb8\x01\x46\x03\x39\xa1\xfc\x3e\x97\x9f\xf7\x91\x1f\x3e\x80\x72\xfa\x7d\xf8\x00\x21\x8c\x12\x1c\x7c\x2c\xf2\x27\x9b\x0b\x2f\x8a\x67\xc8\x36\xa1\xf4\xe0\x39\x7e\x9a\x43\xb4\x09\xb7\x6a\x42\x30\x25\x28\x65\xcd\xdd\xb1\xf4\x09\x08\xc3\x93\x13\x04\x61\xf8\x4e\x8d\xfe\xe3\xe2\xd3\xcd\x90\xf3\x23\xbf\xc5\xe8\x0a\x4a\x3b\x62\x0a\xb5\x62\xdd\x1d\xd5\x0e\x50\xf2\x34\x1e\x8f\x43\xe0\x55\x4c\x7d\xd3\x8f\xdf\xf6\xdf\x0e\xde\xc4\x6f\x07\x16\x40\xf4\xd7\x2a\x5d\x98\xbe\xa5\x6d\x43\x62\x89\x90\xf1\x9f\x93\x93\x7a\x99\x90\x89\xdf\x0a\x8e\x33\x0f\x35\xe6\x43\x3f\xe4\xd2\xff\xb0\xc2\x8b\x19\x22\x06\x38\xce\xdc\xa3\xca\x2a\xa3\x30\xee\x6f\xd1\x82\xa2\xd2\x4a\xb7\xe5\x66\x88\x83\x0f\x2f\x0c\x7d\x10\x9a\x08\xd2\xc5\xa2\x98\xa6\x0c\xb9\x08\x48\x59\xd3\x65\x3a\x45\x10\xc9\x8f\xcf\x38\x4f\x17\xf8\x29\x87\x91\xfc\xfe\xc2\xd2\xc7\x05\xd2\x76\x68\xd9\x30\xc1\xf9\x64\x45\x11\x54\xea\xc2\xf4\x1a\x51\x86\x66\x30\x4b\x17\x54\x21\x15\xc2\x3f\x26\xc2\xc1\xcb\x71\x72\x32\x85\xf7\x0f\xea\x1b\x4d\x59\x41\x26\xf9\xea\xf3\x04\x2d\xd0\x67\x5a\x8e\xcb\x0a\x32\x45\x93\x19\xca\xd2\xd5\x82\x51\x89\xba\xad\x65\xa0\x49\x5c\x8c\xfc\xae\x1a\xa8\xef\x2d\x16\x20\x66\x07\x99\xa5\x2c\x95\xd2\x69\x1b\x82\xa3\x84\x68\x9f\x99\xd2\xda\xe2\xbb\xe7\x06\x8f\x2f\x0c\x51\x17\x04\x74\xf5\x98\x0a\xe7\x28\x3b\xf4\x23\xa3\xd5\x24\xad\x4e\x6d\xc6\x00\x74\x71\x20\x88\xef\x63\xbf\x62\x41\xfa\x63\x40\x17\x78\x8a\xbe\x22\x1b\x4b\x82\x96\x0d\xef\xc4\x99\xcb\xc6\x86\x51\x29\xa5\x54\x36\xc6\xb6\xdc\x52\x09\xfc\xff\x8a\x91\x69\xba\x4c\xa7\x98\xbd\xb8\xa0\x57\xdb\xa6\x87\x80\x17\x9d\xb0\x5e\x94\x3c\xcf\xf1\x42\x71\x2d\x7a\x46\xc4\x63\x1e\x92\x0e\x40\x61\x1b\x24\xd1\x3c\x40\xb1\xfc\x44\x8a\xe7\xda\x1b\x4a\xc2\xba\x2b\x78\x16\xa0\x1e\x95\xce\xb4\x4c\x67\x2e\xe9\x12\x41\x3a\x33\x0c\x30\x2b\x88\x2b\x3d\x31\x4c\xd0\x88\x25\xc8\xf3\xaa\x68\x25\x78\xe6\xc1\x91\x38\xbe\x7a\xda\x4a\xf9\x21\x64\x07\xaf\xc6\xb7\x6d\xdc\x40\xab\xb1\x7a\x30\x12\x61\xc8\x2e\xb4\x68\xb0\x13\x2e\x1a\x18\x78\xf1\x5e\xbc\xd3\x78\x27\x1e\x8f\x99\x34\xbc\xfe\x5e\x3c\x7d\x67\xb6\xe0\x0d\xfa\x06\xde\xf9\x6e\x3c\x75\x10\x76\x23\xaa\x01\xaf\xe1\xb1\x75\x7e\x58\x31\x0f\xe6\x33\x9d\xcd\xec\x3a\xe6\xee\xe5\x46\xfc\x20\x10\x9f\x9a\xbe\x77\x22\xd9\xf4\x2b\xa0\xe2\x16\x14\xd7\xf5\x4e\x2c\x9b\xe4\x04\x56\xbf\x85\xc5\x65\xb8\x13\xcb\x26\x31\x81\x75\xde\xc2\xe2\xb2\xeb\xc6\xea\xd4\xa9\x8d\xb3\x4a\xbf\x7b\xf0\x0e\xe5\xae\xd2\xed\x0e\xbc\x32\x4a\x35\xf6\x46\x1e\xc4\xf2\xdd\xb1\x7d\x42\x6d\x36\xe8\x08\x62\x45\x53\x59\x43\x7d\x50\x2f\x0a\xc6\x89\xed\xa5\x66\xa8\xfd\x95\xe4\xa2\xc1\xeb\xe9\x19\x0a\x78\x25\xbd\xd3\xf8\xf5\xf4\x0c\x05\xed\xa6\x77\x54\x06\x65\x2e\x06\x06\xdd\x41\xff\x95\x74\xdb\xa6\xf6\x9a\x95\x96\xb6\xf7\x0f\x68\xbe\x62\xb5\x16\x9a\xaf\x5e\xa7\x4c\x89\xfe\x21\x49\x95\x4f\xbd\x8e\xe2\x2d\x23\xab\xa9\x95\xa2\x06\x9e\x8b\x00\xf3\x40\xe4\x5c\x45\xa3\x66\xa8\xcc\x8e\xa0\x19\xca\xac\xd9\x9c\x14\xcf\x0e\x8f\xb5\x2f\x08\x29\x88\x7b\x7c\xb9\x48\x99\x8c\x0c\xe8\xd0\xa1\x82\x2f\xe7\xf3\x8a\x32\xe7\x11\x39\x14\x11\x9c\x2e\xf0\xdf\x68\xe6\xe0\x7c\x81\x73\x14\x1c\x77\xd2\x2f\xd8\x75\x83\x85\x5a\x82\x65\xb0\xbc\x8f\xbc\x0c\xa0\x2b\xb2\x29\x87\x91\xcc\xe4\x85\x60\x48\xae\xb2\x9b\x0b\x2e\xa3\xf6\x4e\x26\x63\xf0\x7b\xf6\x60\x0a\xc3\x0e\x51\x34\x8c\xa1\x15\x56\x5a\x03\x36\x1d\xcb\x8c\xb7\xac\xc9\xb4\x16\xaf\x71\x9d\x9f\x9c\xc6\x71\x14\xc7\x67\xfd\x37\xf1\x3e\x11\x4d\xd3\x9c\xcb\x82\xd3\x70\x64\x60\xeb\x3c\xa2\x97\x22\x9f\x39\xb1\xf3\x84\x9f\x52\x11\xf4\x72\x01\xc9\x38\x13\x8d\x46\x51\x22\x63\x45\x7b\x4a\x44\x40\x42\x03\x8a\xd8\xcf\x65\xf0\x4b\x7a\x88\x37\x55\xf1\x3b\x62\x2e\x2b\xbf\x7c\xd1\xa9\xe4\x41\x3b\x4d\xbc\xe5\x4f\xfa\x89\xa2\xd7\x05\xac\xc7\xa8\xae\xa2\x1e\xf3\xf4\xf1\x1d\x2a\xd3\x2a\x2a\x6d\xa2\x95\x61\x4a\x59\xeb\x29\x9e\xc8\xf1\x0c\x1b\x81\xf7\x0f\x5b\x4b\xce\xc7\x92\xee\xc8\x56\x19\x17\x7a\x80\xe1\xd6\xcc\x0c\x19\x59\xd9\x12\xc3\x03\x6c\xb0\xaa\xb5\xd8\x9c\x49\x67\x7e\xb3\x39\x7a\x95\x83\x55\xc0\xce\x34\x5d\x2c\xd0\xcc\x79\xc6\x6c\x5e\xac\x98\xa3\x89\xf0\x18\x6c\xcd\xc3\x2a\x04\x89\x56\xb0\x2b\x39\x4f\xb4\x12\x9a\x21\xad\x5e\x24\xa4\x95\xa0\x31\x0c\x55\xd2\x5f\xcb\x88\x8b\xaf\xd7\x03\xeb\xd2\x3c\x3d\x6d\xb0\xec\x31\x0f\x66\x73\xfa\x11\x0c\xdf\xb1\x9e\xd9\x36\x0c\xa5\xad\x53\x18\x27\x8d\xb9\xbd\x96\xf0\x25\xd7\x39\x74\x89\x47\xc1\x37\x66\xcd\xaa\x31\x3b\x97\x63\x0b\x18\x8a\xdf\x0c\xd6\xce\x9e\xb0\x21\x67\x5a\xd9\x82\x96\xe5\x07\x0b\x94\x3f\xb1\xb9\xb4\x0e\x3e\x2b\xb5\x25\x56\xfa\x8c\x7b\xf4\xc0\xad\x32\x87\x50\x2f\x72\x4a\x0e\x52\x50\x67\x54\x73\xd8\x60\x76\x3e\xca\x93\xb9\xd7\x68\xad\x8d\xc4\x00\xca\xbc\x39\x38\xb2\x11\xf0\xe6\x00\xac\xa7\x45\xce\x70\xbe\x42\x0e\xdb\x6e\x0b\xd8\x64\xee\x91\xa0\xf4\xcf\xed\x16\x67\x6e\xa1\x74\x23\x8b\x27\xb6\x75\x25\x3b\xb3\x1f\xbf\xe8\x31\x20\xab\x35\x86\xcc\x96\x2b\x3a\x37\xbd\x1e\x74\x02\x35\x08\xfa\x8d\xcd\x02\x6c\x6d\xb5\x99\x72\xff\xee\x28\xa7\xe0\x1c\xd3\xe6\x05\x06\xdf\x94\xa5\x06\x49\x59\x26\x12\x9b\x97\x91\xcc\xfb\xfa\xd6\xe4\x75\x15\x38\xc5\xae\x43\x94\x65\x1c\xc1\xce\x61\x7b\x3c\x37\xc3\x0b\xe4\xe0\x19\xca\x19\xce\x30\x22\xd5\x11\x2d\x71\x9d\xe3\x6e\xfa\xdb\xd2\x86\x68\x27\xf1\x5e\x94\x50\xee\x80\xb4\x72\xc0\x3a\xdd\x22\xc1\x74\x9e\x92\x6f\x8b\x19\x7a\xcf\x5c\x0a\xc0\x76\x7b\x88\x38\x40\xd2\x88\x8f\x58\xad\x54\xfd\xb4\xa9\xcd\xa3\x63\x2b\x24\xe8\xaf\x15\x26\x48\x86\x4d\x0d\x2d\xc9\xe2\xb3\xd5\x12\xa5\xea\x70\xaf\x61\xf4\xa7\xb1\x8b\x41\x62\xd6\x4e\x6a\x7f\x20\x1e\x02\x47\x30\xe4\x0a\x3b\xa2\xfb\x15\x82\x16\x33\xe7\xd8\x43\xde\xb1\x16\x2f\xb1\xee\xd0\x84\xef\x3f\xbf\x8a\xea\x9f\x19\xf7\x11\xcb\x41\x25\x1d\xa4\x59\x2a\xd4\x2d\xd1\x38\x46\xd9\x37\x65\x90\x28\xfa\x88\x68\xe8\x3c\x5a\x9a\x4c\x34\x54\x5e\xfa\x5a\x93\x3c\xd0\xef\x97\xf6\x1c\x60\xb2\x76\x7d\x2b\xee\x40\x5b\x31\xa9\x83\x73\xca\xd2\x7c\x8a\x8a\x4c\xab\x9e\x57\xc1\x91\x5e\xd0\xbd\x7f\x50\x37\x0c\xa1\x2a\x84\xe1\x11\x53\xae\xa4\xdc\xb3\x54\xa6\x6e\xa5\xd8\xf3\x84\xd7\xd1\xd1\xd9\x59\xfc\x76\xb0\xd9\xd0\x31\x3c\x1b\x9c\xc6\x21\x58\x13\x48\x6b\xfc\xdc\x32\x8d\x40\x97\x8e\x46\x51\x08\xbc\xdc\x73\x07\x67\x67\xa7\x83\x9e\x2b\x50\x44\x63\x4f\xc2\xf0\xed\x90\x8c\xa2\xf8\x1c\xac\x91\xdc\xbf\x88\xda\xd9\x44\x47\x1c\xf6\xb5\x9e\xf1\x78\x70\x72\x1a\x6d\xa2\xb7\xb1\x3e\x46\x40\xeb\x83\xa2\xf8\x24\x3a\xdb\xc4\x71\x5f\x8d\xd2\x7a\xce\x4f\xde\x6c\xe2\x7e\xe8\xcb\x51\x83\xd3\x0d\xa7\xbc\xd5\xf1\x9b\x6d\x55\xc3\x76\x6b\xe4\xd5\x65\xbc\xa5\x19\xa3\x1b\xf9\x48\x89\xd4\x8f\xf6\x39\x69\x0f\x96\x63\x41\x15\x12\x61\x18\xfa\x85\x76\x3a\xfa\x59\xe5\x5a\x2a\x6c\x4c\xf0\xa8\x9c\x96\x70\x21\xaf\xb3\xfb\xc2\xf3\x1e\x20\xba\xc7\x0f\x5b\xdd\xa8\x2a\xe3\xdc\x6d\x57\x96\xfb\x14\x85\x62\x5c\x9d\x54\x77\x20\x1d\xc1\xb8\xe4\x92\xb3\x38\x29\xaf\x51\xcb\x12\xf0\x04\x86\xe6\xc4\x2a\x60\xb6\xdd\x74\xc8\x9b\x0b\xad\xc4\xda\xb8\x17\x62\xa0\xc1\x86\xb6\x22\x41\xbf\x33\xdb\x10\xcc\x75\xce\x2d\xb9\xed\x9a\x5e\xad\xa6\x13\x41\xd3\xb2\x25\x5c\xaf\x84\xc1\x3a\x01\xca\x4d\x77\xf7\x0a\x94\xf2\x3b\x51\xca\x17\x0b\x9d\xd7\x48\xda\xcd\x2f\x18\x8d\xe2\xfe\x78\x1c\xf7\x77\xa2\x89\xc1\x9d\x70\x92\xab\x7b\xf6\xb0\x8f\xa3\x46\x35\xd1\xc6\x92\xa8\x22\x8e\x46\xd1\x60\x3c\x8e\x06\x7b\x79\xda\x01\x58\x31\xb5\x31\x3e\xbd\xe8\x61\x34\x3a\xdf\xc7\x68\xa3\x20\x78\x30\x6e\xa3\x2d\x7e\xe0\x2b\x69\x34\x9e\x3e\x70\x91\xef\x5d\xda\x0e\x16\xb4\x07\x04\x60\x3c\x1e\x37\x7d\xab\xb5\x9a\x46\x39\xd2\x70\x33\x79\xbb\xd9\x44\xf5\x9b\x2d\x5e\x7f\x87\xd3\x95\x2c\x1f\x4e\x47\x2e\xd0\x20\x54\x36\xed\xa5\x64\xab\xd8\xaa\xab\xe6\xfb\x50\xd5\x24\xf4\xb5\x24\xd5\x66\xa6\x2e\xb5\xef\xc3\xdd\x86\x6a\x2b\xe1\x96\x04\x9a\x77\xd8\xef\xc2\x61\x64\xa3\xd9\x39\x3e\x1a\x5a\x78\xf4\xfa\x4d\x2e\x07\xfd\x5d\x5c\xda\xee\x72\xea\x97\x2c\xa5\x81\x42\xb4\x1b\xa0\xe9\xd4\xaf\x47\x68\x57\x8a\xdb\x08\x49\xd3\x4d\x20\x1a\x8f\xbb\x1d\xb0\xe2\xec\xbf\x02\xdc\x2e\x35\x1f\x8a\x9b\x34\x3d\x9b\xb7\x46\x83\xa4\xe9\xdb\xbc\x79\x87\x77\x57\xcb\xfb\x17\xb0\xd1\xae\x83\x5b\x42\x57\x1e\xcd\x14\xcf\x96\xba\x92\xd7\xf7\x91\x78\x76\xd0\xed\xad\xd5\x62\x77\x90\x29\xdd\xbe\x4d\xa7\xde\x10\x0e\x23\x64\x2b\xaf\x73\xc7\xad\xbd\xbe\x14\xaa\xb1\xbe\x7a\xeb\x38\x04\xbf\xb5\x12\xdd\x5f\x77\xe2\x5b\x77\x0e\xbb\x5c\x77\x6e\x1e\xdd\x5c\x3e\x21\x95\x4e\x5d\x55\x79\xad\xad\xe0\x65\xc4\x10\x23\x33\x34\xf1\x0e\xcb\xc1\xf7\xe4\x72\x35\x77\x0e\xa6\x0e\x2b\x0a\x87\xce\x0b\xc2\x1c\x56\x38\xd3\x22\x67\x29\xce\x9d\x34\xd7\xb2\xef\xb2\xbe\xca\xe0\xf1\x71\xa3\x34\xd8\xc5\x82\xaa\x18\x7a\x50\x26\x45\x41\x46\x8a\xcf\xdf\xaa\xdc\xc3\x38\xce\xd4\x85\x76\xc7\x0a\x11\x00\x5b\xa3\x9e\x61\x93\x6b\xf9\x9c\xcd\x9e\x2e\xf7\x3a\x0f\x1c\x55\xcc\xaa\x13\x62\x0c\xde\x35\x5b\x3c\x04\x86\xdd\xe7\xb7\x7a\x1f\xd7\x7a\x7c\xa6\x1e\x2b\x22\xaf\x41\x9b\xa7\xad\xc1\xe3\xa3\x38\x5f\x92\x03\xd6\x45\x9b\x19\xa5\x80\xf7\x2c\xe7\x99\x2c\x00\xd8\xdb\x29\x57\x9b\x4c\x00\xc3\x84\x69\x45\xb4\xab\xeb\x3b\x51\x8f\x87\x10\xd6\x8f\xd2\x82\xfa\x4d\x9a\x35\xb6\xad\x5f\xb8\xf8\xcc\x23\x60\x2b\x13\xd5\x7c\x44\xa4\xc4\x0b\xbd\x7c\xa8\xc5\xb1\x5e\xae\xb2\xd4\x6c\xc4\x53\xc3\x75\x01\xb3\x3a\x33\x4d\x77\x0d\xe7\x39\xe2\xba\x80\x6e\x76\x72\x1a\x81\xd1\x68\xb0\x49\x4f\x06\xa7\xf5\xdc\xf9\xce\xb9\xfd\x50\xcd\x8d\xce\x78\xd4\x1a\x6f\x5c\x3e\x5b\xc0\xcc\x0d\x98\x55\x07\x8c\x98\xfc\x86\xcf\x3d\xaf\xe6\x72\x98\x79\x09\xb3\xe2\x30\xb2\x62\x58\x66\xb9\xd4\x6e\xf6\x85\x4a\x75\x8b\x1e\x14\x03\x93\x8e\x71\x6e\x31\x1e\xf3\x8c\x5c\xe4\xe1\xbe\x5b\x9c\xb8\x91\xcc\xc6\x23\xe0\xa9\x84\x7c\x6b\x5c\x4a\xd8\x8d\x07\xe7\x33\x4c\x9a\x77\x04\xa5\x42\x9b\x96\xc9\xba\xb7\xad\xc9\xe4\x4b\xb3\x8c\xb3\x0b\xc7\x70\xe0\xbd\xa0\x93\x05\xca\x0f\x89\xa3\xdb\x74\x76\x31\x3c\x4f\xe9\x04\x5b\x36\x59\x55\x91\xf9\x37\x54\x27\x0f\xd9\x3e\x05\xaf\x5a\xc5\x06\x95\x65\xed\x43\xf7\xce\x52\x9a\xf2\x79\x5d\xb5\x93\x92\x55\x77\xdc\xf8\x4f\x4a\x0e\xd3\x22\xa7\xcc\x21\x50\x5e\xa8\x04\x19\x41\xe8\x6f\xe4\x96\x6f\xd1\x41\x52\x02\x39\xd4\xa5\x7e\x0e\x8f\x8f\xfd\x75\x26\xba\x86\x05\x24\xf2\x79\x3e\x5c\x6f\x45\x69\x9e\x32\x27\x53\x4f\x23\x55\x39\xc4\x8d\xc2\xb8\x0f\x14\x8d\x14\xfe\x78\x7b\x73\x1d\xc8\x7d\x11\x67\x2f\x2e\x2d\x7b\xe6\x30\x33\xca\x70\x6e\x5a\xf6\xac\x9a\x3d\x39\xd8\xf1\xc7\x00\x6e\x06\xac\xcf\xf6\xdd\xcc\x9f\xb7\x7a\x7e\x4e\xd9\xdc\xcd\xfc\x55\xab\xe3\xee\x65\xc9\x67\x14\x25\x0f\x4b\xd8\xf5\x12\x9f\xd3\xb3\xbf\xa3\x36\x7b\xb4\xc7\xd2\x6e\x56\xbe\x86\xae\xff\x22\xa5\x3d\xd2\xcd\xfc\x65\x49\x7e\x06\x6d\xef\x9e\x39\x81\x4c\x5d\x08\xb8\x33\x90\xfc\x7a\xfe\x5b\x41\xfe\x44\x24\x0e\x28\xca\x67\x6e\x66\xbe\x3c\x74\x01\xd8\x56\x8a\x54\x36\x41\x5d\xe6\x1f\x1f\x73\x1b\x90\x77\x47\xeb\x45\xf1\x34\xcc\x7d\xa9\xf7\x21\xf1\x45\xdc\x34\xa4\xdb\x04\xfd\xdf\x92\x07\x18\xea\x51\x81\x53\x24\xff\xf3\x9f\x00\x00\x00\xff\xff\x72\xcb\xfe\xc7\x39\x34\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/std.js"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
